# name: Deploy Image to ECR (Staging)
# on: [push]

# env:
#   AWS_REGION: us-east-2 # set this to your preferred AWS region, e.g. us-west-1
#   ECR_REPOSITORY: bogano # set this to your Amazon ECR repository name

# jobs:
#   build:
#     name: Build Image
#     uses: sinkingmoonkungfu/bogano/.github/workflows/build.yml@jwir3/ecr-push-on-merge2
#     secrets: inherit
#   deploy:
#     name: Deploy ECR Image
#     runs-on: ubuntu-latest
#     environment: staging
#     needs: build

#     steps:
#       - name: Download all workflow run artifacts
#         uses: actions/download-artifact@v3
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

#       - name: Build, tag, and push image to Amazon ECR
#         id: push-image
#         run: |
#           ls -alh /var/lib/docker
#         # env:
#         #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         #   IMAGE_TAG: ${{ github.sha }}
#         # run: |
#         #   docker push 730335612047.dkr.ecr.us-east-2.amazonaws.com/bogano:staging-latest
#         #   echo "image=730335612047.dkr.ecr.us-east-2.amazonaws.com/bogano:staging-latest" >> $GITHUB_OUTPUT

#       #   - name: Fill in the new image ID in the Amazon ECS task definition
#       #     id: task-def
#       #     uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
#       #     with:
#       #       task-definition: ${{ env.ECS_TASK_DEFINITION }}
#       #       container-name: ${{ env.CONTAINER_NAME }}
#       #       image: ${{ steps.build-image.outputs.image }}

#     #   - name: Deploy Amazon ECS task definition
#     #     uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
#     #     with:
#     #       task-definition: ${{ steps.task-def.outputs.task-definition }}
#     #       service: ${{ env.ECS_SERVICE }}
#     #       cluster: ${{ env.ECS_CLUSTER }}
#     #       wait-for-service-stability: true
